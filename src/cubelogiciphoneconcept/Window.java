/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cubelogiciphoneconcept;

import com.sun.awt.AWTUtilities;
import java.awt.Color;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author christiancolbach
 */
public class Window extends javax.swing.JFrame implements ActionListener {

    boolean printMouseLocationOnWindow = true;
    boolean printMouseLocationOnScreen = printMouseLocationOnWindow;
    int timerInterval = 100;

    Timer timer;

    @Override
    public void actionPerformed(ActionEvent e) /* Timer */ {
        screen.decrementTime(timerInterval);
        if (screen.needsActiveRedraw()) {
            screen.repaint();
        }
    }

    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
        setLocationRelativeTo(null);
        setBackground(new Color(0, 0, 0, 0));

        GraphicsEnvironment ge
                = GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice gd = ge.getDefaultScreenDevice();
        boolean isPerPixelTranslucencySupported
                = gd.isWindowTranslucencySupported(GraphicsDevice.WindowTranslucency.PERPIXEL_TRANSLUCENT);

        if (!isPerPixelTranslucencySupported) {
            System.out.println("Per-pixel translucency is not supported");
            System.exit(0);
        }

        this.timer = new Timer(timerInterval, this);
        this.timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        screen = new cubelogiciphoneconcept.Screen();
        mockupLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        screen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                screenMousePressed(evt);
            }
        });

        javax.swing.GroupLayout screenLayout = new javax.swing.GroupLayout(screen);
        screen.setLayout(screenLayout);
        screenLayout.setHorizontalGroup(
            screenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
        );
        screenLayout.setVerticalGroup(
            screenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 568, Short.MAX_VALUE)
        );

        getContentPane().add(screen, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 113, 320, 568));

        mockupLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cubelogiciphoneconcept/mockup.png"))); // NOI18N
        mockupLabel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                mockupLabelMouseDragged(evt);
            }
        });
        mockupLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mockupLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mockupLabelMouseReleased(evt);
            }
        });
        getContentPane().add(mockupLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void mockupLabelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mockupLabelMouseDragged
        if (pressedX != -1 && pressedY != -1) {
            int x = locationX + evt.getXOnScreen() - pressedX;
            int y = locationY + evt.getYOnScreen() - pressedY;
            setLocation(x, y);
        }
        repaint();
    }//GEN-LAST:event_mockupLabelMouseDragged

    int pressedX = -1;
    int pressedY = -1;
    int locationX = -1;
    int locationY = -1;
    private void mockupLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mockupLabelMousePressed
        if (evt.getX() > 254 && evt.getX() < 319 && evt.getY() < 15) {
            System.exit(0);
        } else if (evt.getX() > 154 && evt.getX() < 230 && evt.getY() > 703 && evt.getY() < 771) {
            screen.init();
            screen.blank = true;
            System.out.println("reset");
        } else if (evt.getX() < 33 || evt.getX() > 33 + 320 || evt.getY() < 113 || evt.getY() > 113 + 568) {
            pressedX = evt.getXOnScreen();
            pressedY = evt.getYOnScreen();
            locationX = getLocation().x;
            locationY = getLocation().y;
            if (printMouseLocationOnWindow) {
                System.out.println("Mouse auf Fenster: x=" + evt.getX() + ", y=" + evt.getY());
            }
        }
        repaint();
    }//GEN-LAST:event_mockupLabelMousePressed

    private void screenMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_screenMousePressed
        if (printMouseLocationOnScreen) {
            System.out.println("Mouse auf Screen: x=" + evt.getX() + ", y=" + evt.getY());
        }
        screen.click(evt.getX(), evt.getY());
        repaint();
    }//GEN-LAST:event_screenMousePressed

    private void mockupLabelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mockupLabelMouseReleased
        pressedX = -1;
        pressedY = -1;
        screen.blank = false;
        repaint();
    }//GEN-LAST:event_mockupLabelMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);;
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel mockupLabel;
    private cubelogiciphoneconcept.Screen screen;
    // End of variables declaration//GEN-END:variables

}
